type Schema {
    query: Query
    mutation: Mutation
}

type Query {
    getMessage(deviceId: String!, timestamp: AWSTimestamp!): Message,
    allMessages(deviceId: String!): [Message],
    getDevice(deviceId: String!): Device,
    allDevices(nextToken: String): DevicePage
}

type Mutation {
    # Stores a message for a device in DynamoDB. Returns an error if device creation fails
    storeMessage(deviceId: String!, message: String!, messageType: String!): Message
}

type Message {
    deviceId: String!
    timestamp: AWSTimestamp!
    message: String!
    messageType: String!
}

type Device {
    deviceId: String!,
    deviceName: String,
    createdTimestamp: AWSTimestamp!,
    messages: [Message]
}

# Returns a paginated list of devices.
type DevicePage {
  items: [Device]!,
  nextToken: String
}