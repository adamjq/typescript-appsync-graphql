AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: GraphQL Messages API using NodeJS and Typescript

Parameters:
  APIName:
    Type: String
    Description: The name of the GraphQL API
    MinLength: 3
    MaxLength: 20
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    Default: MessagesGraphQLAPI

Globals:
  Function:
    Timeout: 3
    Runtime: nodejs10.x
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref DynamoDBMessagesTable

Resources:

  DynamoDBMessagesTable:
    Description: "Data store for AWS AppSync Messages"
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${APIName}-messages-table
      AttributeDefinitions:
        - AttributeName: deviceId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: deviceId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  AppSyncApi:
    Type: "AWS::AppSync::GraphQLApi"
    Description: "The GraphQL API for the Messages"
    Properties:
      AuthenticationType: "API_KEY"
      Name: !Sub ${APIName}

  AppSyncSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      DefinitionS3Location: ./schema.graphql

  AppSyncDynamoDBAccessRole:
    Type: AWS::IAM::Role
    Description: "An IAM Role to allow AWS AppSync to access the dynamodb table"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AppSyncDynamoDBPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                Resource: !Join [ "", [ !GetAtt DynamoDBMessagesTable.Arn, "*" ] ]

  AppSyncMessagesTableDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      Name: !Sub ${APIName}_AppSyncMessagesTableDataSource
      Description: "The Messages Table AppSync Data Source"
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt AppSyncDynamoDBAccessRole.Arn
      DynamoDBConfig:
        TableName: !Ref DynamoDBMessagesTable
        AwsRegion: !Sub ${AWS::Region}

  AppSyncLambdaServiceRole:
    Type: AWS::IAM::Role
    Description: "An IAM Role to allow AWS AppSync to invoke lambda functions"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AppSyncInvokeLambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt StoreMessageLambdaFunction.Arn

  # AppSync API Resolvers:

  AppSyncGetMessageQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: AppSyncSchema
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      TypeName: Query
      FieldName: getMessage
      DataSourceName: !GetAtt AppSyncMessagesTableDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "GetItem",
          "key": {
            "deviceId": $util.dynamodb.toDynamoDBJson($ctx.args.deviceId),
            "timestamp": $util.dynamodb.toDynamoDBJson($ctx.args.timestamp)
          }
        }
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  AppSyncGetDeviceMessagesQueryResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: AppSyncSchema
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      TypeName: Query
      FieldName: getDeviceMessages
      DataSourceName: !GetAtt AppSyncMessagesTableDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "Query",
          "query": {
            "expression": "deviceId = :deviceId",
            "expressionValues": {
              ":deviceId": $util.dynamodb.toDynamoDBJson($ctx.args.deviceId)
            }
          }
        }
      ResponseMappingTemplate: "$utils.toJson($context.result.items)"

  AppSyncStoreMessageMutationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: AppSyncSchema
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      TypeName: Mutation
      FieldName: storeMessage
      DataSourceName: !GetAtt StoreMessageLambdaDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2017-02-28",
          "operation": "Invoke",
          "payload": {
            "field": "storeMessage",
            "arguments": $utils.toJson($context.arguments)
          }
        }
      ResponseMappingTemplate: |
        $utils.toJson($context.result)

  StoreMessageLambdaDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: !GetAtt AppSyncApi.ApiId
      Name: !Sub ${APIName}_StoreMessageLambdaDataSource
      Description: "The AppSync Lambda Data Source"
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt AppSyncLambdaServiceRole.Arn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt StoreMessageLambdaFunction.Arn

  StoreMessageLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./handler.zip
      Handler: storeMessage.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBMessagesTable

Outputs:

  DynamoDBMessagesTableName:
    Description: The name of the DynamoDB Table
    Value: !Ref DynamoDBMessagesTable

  GraphQLApiEndpoint:
    Description: The URL to the GraphQL Endpoint
    Value: !GetAtt AppSyncApi.GraphQLUrl

  GraphQLApiId:
    Description: The API ID of the GraphQL API
    Value: !GetAtt AppSyncApi.ApiId